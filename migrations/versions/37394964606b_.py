"""empty message

Revision ID: 37394964606b
Revises: 
Create Date: 2024-04-06 15:29:04.465925

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '37394964606b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_beat_clockedschedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clocked_time', sa.DateTime(), nullable=False, comment='Clock Time'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_beat_crontabschedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('minute', sa.String(length=240), nullable=False, comment='Minute(s)'),
    sa.Column('hour', sa.String(length=96), nullable=False, comment='Hour(s)'),
    sa.Column('day_of_week', sa.String(length=64), nullable=False, comment='Day(s) Of The Week'),
    sa.Column('day_of_month', sa.String(length=124), nullable=False, comment='Day(s) Of The Month'),
    sa.Column('month_of_year', sa.String(length=64), nullable=False, comment='Month(s) Of The Year'),
    sa.Column('timezone', sa.String(length=128), nullable=False, comment='Cron Timezone'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_beat_intervalschedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('every', sa.Integer(), nullable=False, comment='Number of Periods'),
    sa.Column('period', sa.Enum('days', 'hours', 'minutes', 'seconds', 'microseconds'), nullable=False, comment='Interval Period'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_beat_periodictasks',
    sa.Column('ident', sa.SmallInteger(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('ident')
    )
    op.create_table('celery_beat_solarschedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event', sa.String(length=24), nullable=False, comment='Solar Event'),
    sa.Column('latitude', sa.DECIMAL(precision=9, scale=6), nullable=False, comment='Latitude'),
    sa.Column('longitude', sa.DECIMAL(precision=9, scale=6), nullable=False, comment='Longitude'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_beat_periodictask',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Name'),
    sa.Column('task', sa.String(length=200), nullable=False, comment='Task Name'),
    sa.Column('interval_id', sa.Integer(), nullable=True, comment='Interval Schedule'),
    sa.Column('crontab_id', sa.Integer(), nullable=True, comment='Crontab Schedule'),
    sa.Column('solar_id', sa.Integer(), nullable=True, comment='Solar Schedule'),
    sa.Column('clocked_id', sa.Integer(), nullable=True, comment='Clocked Schedule'),
    sa.Column('args', sa.JSON(), nullable=False, comment='Positional Arguments'),
    sa.Column('kwargs', sa.JSON(), nullable=False, comment='Keyword Arguments'),
    sa.Column('queue', sa.String(length=200), nullable=True, comment='Queue Override'),
    sa.Column('exchange', sa.String(length=200), nullable=True, comment='Exchange'),
    sa.Column('routing_key', sa.String(length=200), nullable=True, comment='Routing Key'),
    sa.Column('headers', sa.JSON(), nullable=False, comment='AMQP Message Headers'),
    sa.Column('priority', sa.Integer(), nullable=True, comment='Priority'),
    sa.Column('expires', sa.DateTime(), nullable=True, comment='Expires Datetime'),
    sa.Column('expire_seconds', sa.Integer(), nullable=True, comment='Expires timedelta with seconds'),
    sa.Column('one_off', sa.Boolean(), nullable=False, comment='One-off Task'),
    sa.Column('start_time', sa.DateTime(), nullable=True, comment='Start Datetime'),
    sa.Column('enabled', sa.Boolean(), nullable=False, comment='Enabled'),
    sa.Column('last_run_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True, comment='Last Run Datetime'),
    sa.Column('total_run_count', sa.Integer(), nullable=False, comment='Total Run Count'),
    sa.Column('date_changed', sa.DateTime(), nullable=True, comment='Last Modified'),
    sa.Column('description', sa.Text(), nullable=False, comment='Description'),
    sa.ForeignKeyConstraint(['clocked_id'], ['celery_beat_clockedschedule.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['crontab_id'], ['celery_beat_crontabschedule.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['interval_id'], ['celery_beat_intervalschedule.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['solar_id'], ['celery_beat_solarschedule.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=mysql.TINYBLOB(),
               type_=sa.LargeBinary(length=128),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.LargeBinary(length=128),
               type_=mysql.TINYBLOB(),
               existing_nullable=True)

    op.drop_table('celery_beat_periodictask')
    op.drop_table('celery_beat_solarschedule')
    op.drop_table('celery_beat_periodictasks')
    op.drop_table('celery_beat_intervalschedule')
    op.drop_table('celery_beat_crontabschedule')
    op.drop_table('celery_beat_clockedschedule')
    # ### end Alembic commands ###
